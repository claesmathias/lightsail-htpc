version: '3.7'

services:

#
# letsencrypt
# This container sets up an Nginx webserver and reverse proxy with php support 
# and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. 
# It also contains fail2ban for intrusion prevention.
#
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    privileged: true
    restart: always
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - EMAIL=${EMAIL}
      - URL=${URL}
      - EXTRA_DOMAINS=${EXTRA_DOMAINS}
      - DHLEVEL=2048
      - TZ=${TZ}
      - VALIDATION=http
    ports:
      - 80:80
      - 443:443
    volumes:
      - /home/centos/letsencrypt:/config
      - /home/centos/lightsail-htpc/nginx:/config/nginx/site-confs/default
    depends_on:
      - "no-ip"
      - "sonarr"
      - "radarr"
      - "bazarr"
      - "nzbget"
      - "plex"
      - "ombi"
    extra_hosts:
      - "plex:${HOST_IP}"
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f --insecure https://localhost && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# duckdns
# Duck DNS free dynamic DNS hosted on Amazon VPC.
#    
  duckdns:
    image: linuxserver/duckdns
    container_name: duckdns
    environment:
      - TZ=${TZ}
      - SUBDOMAINS=${DUCKDNS_SUBDOMAINS}
      - TOKEN=${DUCKDNS_TOKEN}
    volumes:
      - /home/centos/duckdns/config:/config #optional
    restart: unless-stopped

#
# nzbget
# NZBGet is a usenet downloader, written in C++ and designed with performance in mind to achieve maximum download speed by using very little system resources.
#
  nzbget:
    image: linuxserver/nzbget
    container_name: nzbget
    restart: always
    volumes:
      - /home/centos/lightsail-htpc/nzbget.conf:/config/nzbget.conf
      - /home/centos/downloads/complete:/downloads
      - /home/centos/downloads/incomplete:/incomplete-downloads
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:6789 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# sonarr
# Sonarr (formerly NZBdrone) is a PVR for usenet and bittorrent users. 
# It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. 
# It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.
#
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    restart: always
    volumes:
      - /home/centos/sonarr:/config
      - /home/centos/lightsail-htpc/sonarr.xml:/config/config.xml
      - /home/centos/tv:/tv
      - /home/centos/downloads/complete:/downloads
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    extra_hosts:
      - "plex:${HOST_IP}"
    depends_on:
      - "nzbget"  
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:8989 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# radarr
# Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent.
#
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    restart: always
    volumes:
      - /home/centos/radarr:/config
      - /home/centos/lightsail-htpc/radarr.xml:/config/config.xml
      - /home/centos/downloads/complete:/downloads
      - /home/centos/movies:/movies
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    extra_hosts:
      - "plex:${HOST_IP}"
    depends_on:
      - "nzbget" 
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:7878 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# bazarr
# Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements.
#
  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /home/centos/bazarr:/config
      - /home/centos/lightsail-htpc/bazarr.ini:/config/config/config.ini
      - /home/centos/movies:/movies
      - /home/centos/tv:/tv
    depends_on:
      - "sonarr"
      - "radarr"
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:6767 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# nzbhydra
# NZBHydra is a meta search for NZB indexers and the "spiritual successor" to NZBmegasearcH.
# It provides easy access to a number of raw and newznab based indexers.
#
  nzbhydra:
    image: linuxserver/hydra
    container_name: nzbhydra
    restart: always
    volumes:
      - /home/centos/nzbhydra:/config
      - /home/centos/lightsail-htpc/nzbhydra.cfg:/config/hydra/settings.cfg
      - /home/centos/downloads:/downloads
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    depends_on:
      - "nzbget"
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:5075 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# plex
# Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices.
# This container is packaged as a standalone Plex Media Server.
#
  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: "host"
    restart: always
    volumes:
      - /home/centos/plex:/config
      - /home/centos/tv:/data/tvshows
      - /home/centos/movies:/data/movies
      - /home/centos/lightsail-htpc/Plug-ins/Trakttv.bundle:/config/Library/Application Support/Plex Media Server/Plug-ins/Trakttv.bundle
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
      - VERSION=docker
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:32400/web && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# ombi
# Ombi allows you to host your own Plex Request and user management system.
#
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: always
    volumes:
      - /home/centos/ombi:/config
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${TZ}
    ports:
      - 3579:3579
    networks:
      - app_net
    healthcheck:
     test: ["CMD-SHELL", "curl -f http://localhost:3579 && echo 'OK'"]
     interval: 5s
     timeout: 2s
     retries: 20

#
# portainer
# Portainer is a lightweight management UI which allows you to easily manage your Docker host or Swarm cluster.
#
  portainer:
    image: portainer/portainer
    container_name: portainer
    privileged: true
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/centos/portainer:/data
    command: ["--host", "unix:///var/run/docker.sock", "--admin-password-file", "/run/secrets/portainer_secret"]
    secrets:
      - portainer_secret
    networks:
      - app_net

#
# watchtower
# Watchtower is an application that will monitor your running Docker containers and watch for changes to the images that those containers were originally started from.
# If watchtower detects that an image has changed, it will automatically restart the container using the new image.
#
  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    privileged: true
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup

#
# secrets
#
secrets:
  portainer_secret:
    file: ./portainer_secret.txt

#
# network
#
networks:
  app_net:
    driver: bridge
    ipam:
     driver: default
     config:
      - subnet: 172.20.0.0/16
