## Version 2018/12/05 - Changelog: https://github.com/linuxserver/docker-letsencrypt/commits/master/root/defaults/default

upstream plex-upstream {
    server plex:32400;
}

upstream portainer {
    server portainer:9000;
}

# listening on port 80 disabled by default, remove the "#" signs to enable
# redirect all traffic to https
server {
	listen 80;
	listen [::]:80;
	server_name _;
	return 301 https://$host$request_uri;
}

# main server block
server {
	listen 443 ssl http2 default_server;
	listen [::]:443 ssl http2 default_server;

	root /config/www;
	index index.html index.htm index.php;

	server_name _;

	# enable subfolder method reverse proxy confs
	include /config/nginx/proxy-confs/*.subfolder.conf;

	# all ssl related config moved to ssl.conf
	include /config/nginx/ssl.conf;

	# enable for ldap auth
	#include /config/nginx/ldap.conf;

	client_max_body_size 0;

	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";

	# this is where everything cool happens (you probably don't need to change anything here):
	location / {
		# if a request to / comes in, 301 redirect to the main plex page.
		# but only if it doesn't contain the X-Plex-Device-Name header
		# this fixes a bug where you get permission issues when accessing the web dashboard
		if ($http_x_plex_device_name = '') {
			rewrite ^/$ http://$http_host/web/index.html;
		}

		# set some headers and proxy stuff.
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_redirect off;

		# include Host header
		proxy_set_header Host $http_host;

		# proxy request to plex server
		proxy_pass https://plex-upstream;
	}

	# nzbget
	# NZBGet is a usenet downloader.
	location ^~ /nzbget {
		auth_basic "Restricted";
		auth_basic_user_file /config/nginx/.htpasswd;
		include /config/nginx/proxy.conf;
		proxy_pass http://nzbget:6789;
	}

	# sonarr
	# Smart PVR for newsgroup and bittorrent users. 
	location ^~ /sonarr {
		auth_basic "Restricted";
		auth_basic_user_file /config/nginx/.htpasswd;
		include /config/nginx/proxy.conf;
		proxy_pass http://sonarr:8989/sonarr;
	}

	# radarr
	# # Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent.
	location ^~ /radarr {
		auth_basic "Restricted";
		auth_basic_user_file /config/nginx/.htpasswd;
		include /config/nginx/proxy.conf;
		proxy_pass http://radarr:7878/radarr;
	}

        # bazarr
	# Bazarr is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements.
        location ^~ /bazarr {
                auth_basic "Restricted";
                auth_basic_user_file /config/nginx/.htpasswd;
                include /config/nginx/proxy.conf;
                proxy_pass http://bazarr:6767/bazarr;
        }

	# Meta search for NZB indexers. 
	location ^~ /nzbhydra/ {
		auth_basic "Restricted";
		auth_basic_user_file /config/nginx/.htpasswd;
		include /config/nginx/proxy.conf;
		proxy_pass http://nzbhydra:5075/nzbhydra;
	}
	
	# ombi
        # Ombi allows you to host your own Plex Request and user management system.
        location /ombi {
        	proxy_http_version 1.1;
       		proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection keep-alive;
        	proxy_set_header Host $host;
        	proxy_cache_bypass $http_upgrade;
                proxy_pass http://ombi:3579/ombi;
        }

	# portainer
	# Simple management UI for Docker.
  	location /portainer/ {
      		proxy_http_version 1.1;
      		proxy_set_header Connection "";
      		proxy_pass http://portainer/;
	}

}

# enable subdomain method reverse proxy confs
include /config/nginx/proxy-confs/*.subdomain.conf;
# enable proxy cache for auth
proxy_cache_path cache/ keys_zone=auth_cache:10m;
